{"version":3,"sources":["components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","className","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","process","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","style","width","height","color","position","left","top","transform","Track","track","artist_name","track_name","album_name","to","track_id","Tracks","undefined","length","Spinner","Fragment","map","item","key","Search","trackTitle","findTrack","e","preventDefault","onChange","target","name","onSubmit","bind","placeholder","Index","Lyrics","lyrics","match","params","id","Object","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","format","updated_time","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.39b2922e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar mb-5\">\n      <span className=\"navbar-brand mb-0 h1 mx-auto\">LYRICALLY</span>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_TRACKS\":\n      return {\n        ...state,\n        track_list: action.payload,\n        heading: \"Search Results\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    track_list: [],\n    heading: \"Top 10 Tracks\",\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`\n      )\n      .then((res) => {\n        // console.log(res.data);\n        this.setState({ track_list: res.data.message.body.track_list });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div\n      className=\"spinner-grow\"\n      style={{\n        width: \"10rem\",\n        height: \"10rem\",\n        color: \"#b030b0\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Track = props => {\n  const { track } = props;\n\n  return (\n    <div className=\"col-md-6\">\n      <div className=\"card mb-4 shadow-sm\">\n        <div className=\"card-body\">\n          <h5>{track.artist_name}</h5>\n          <p className=\"card-text\">\n            <strong>\n              <i className=\"fas fa-play\" /> Track\n            </strong>\n            : {track.track_name}\n            <br />\n            <strong>\n              <i className=\"fas fa-compact-disc\" /> Album\n            </strong>\n            : {track.album_name}\n          </p>\n          <Link\n            to={`lyrics/track/${track.track_id}`}\n            className=\"btn btn-dark btn-block\"\n          >\n            <i className=\"fas fa-chevron-right\" /> View Lyrics\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Track;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Track from '../tracks/Track';\n\nclass Tracks extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { track_list, heading } = value;\n\n          if (track_list === undefined || track_list.length === 0) {\n            return <Spinner />;\n          } else {\n            return (\n              <React.Fragment>\n                <h3 className=\"text-center mb-4\">{heading}</h3>\n                <div className=\"row\">\n                  {track_list.map(item => (\n                    <Track key={item.track.track_id} track={item.track} />\n                  ))}\n                </div>\n              </React.Fragment>\n            );\n          }\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Tracks;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Consumer } from \"../../context\";\n\nclass Search extends Component {\n  state = {\n    trackTitle: \"\",\n  };\n\n  findTrack = (dispatch, e) => {\n    e.preventDefault();\n\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_MM_KEY}`\n      )\n      .then((res) => {\n        dispatch({\n          type: \"SEARCH_TRACKS\",\n          payload: res.data.message.body.track_list,\n        });\n\n        this.setState({ trackTitle: \"\" });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-4 p-4\">\n              <h1 className=\"display-4 text-center\">\n                <i className=\"fas fa-music\" /> Search For A Song\n              </h1>\n              <p className=\"lead text-center text-muted\">\n                Get the lyrics for any song\n              </p>\n              <form onSubmit={this.findTrack.bind(this, dispatch)}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Song title...\"\n                    name=\"trackTitle\"\n                    value={this.state.trackTitle}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <button\n                  className=\"btn text-white btn-lg btn-block mb-5\"\n                  type=\"submit\"\n                >\n                  Get Track Lyrics\n                </button>\n              </form>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport Tracks from '../tracks/Tracks';\nimport Search from '../tracks/Search';\n\nconst Index = () => {\n  return (\n    <React.Fragment>\n      <Search />\n      <Tracks />\n    </React.Fragment>\n  );\n};\n\nexport default Index;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/Spinner\";\nimport Moment from \"react-moment\";\n\nclass Lyrics extends Component {\n  state = {\n    track: {},\n    lyrics: {},\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`\n      )\n      .then((res) => {\n        this.setState({ lyrics: res.data.message.body.lyrics });\n\n        return axios.get(\n          `https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`\n        );\n      })\n      .then((res) => {\n        this.setState({ track: res.data.message.body.track });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    const { track, lyrics } = this.state;\n\n    if (\n      track === undefined ||\n      lyrics === undefined ||\n      Object.keys(track).length === 0 ||\n      Object.keys(lyrics).length === 0\n    ) {\n      return <Spinner />;\n    } else {\n      return (\n        <React.Fragment>\n          <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\n            Go Back\n          </Link>\n          <div className=\"card\">\n            <h5 className=\"card-header\">\n              {track.track_name} by{\" \"}\n              <span className=\"text-secondary\">{track.artist_name}</span>\n            </h5>\n            <div className=\"card-body\">\n              <p className=\"card-text\">{lyrics.lyrics_body}</p>\n            </div>\n          </div>\n\n          <ul className=\"list-group mt-3\">\n            <li className=\"list-group-item\">\n              <strong>Album ID</strong>: {track.album_id}\n            </li>\n            <li className=\"list-group-item\">\n              <strong>Song Genre</strong>:{\" \"}\n              {track.primary_genres.music_genre_list.length > 0\n                ? track.primary_genres.music_genre_list[0].music_genre\n                    .music_genre_name\n                : \"Unknown\"}\n            </li>\n            <li className=\"list-group-item\">\n              <strong>Explicit Words</strong>:{\" \"}\n              {track.explicit === 0 ? \"No\" : \"Yes\"}\n            </li>\n            <li className=\"list-group-item\">\n              <strong>Release Date</strong>:{\" \"}\n              <Moment format=\"MM/DD/YYYY\">{track.updated_time}</Moment>\n            </li>\n          </ul>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Lyrics;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\n\nimport './App.css';\n\nimport { Provider } from './context';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Index} />\n                <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}